name: Release

on:
  push:
    branches:
      - test/release

jobs:
  release:
    name: build and release electron app
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Check out git repository
        uses: actions/checkout@v3.0.0

      - name: Install Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: |
          yarn install --frozen-lockfile
          echo "${{ secrets.QINIU_ENV_JS }}" > qiniu_env.js

      - name: Release for Windows
        if: matrix.os == 'windows-latest'
        run: |
          yarn release
          dir ./release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Release for MacOS
        if: matrix.os == 'macos-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          yarn release

      - name: Release for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
